{"mappings":"MAAO,IAAIA,EAAW,GACXC,EAAU,GAInBD,ECJe,CAAC,cAAc,kDAAkD,+CAA+C,+CAA+C,wBAAwB,wDAAwD,mDAAmD,qBAAqB,uCAAuC,wCAAwC,uCAAuC,8CAA8C,uCDK1eC,ECJc,4BCOhB,MAAMC,EAAS,CACXC,UAAWF,EACXG,iBAAkBJ,GAOtBK,KAAKC,iBAAiB,WAAYC,IAK9BA,EAAEC,UAHSC,OAAOC,KAAKR,EAAOC,WACrBQ,MAAKC,GAASA,EAAMC,OAAOX,EAAOE,oBAIlCO,MAAI,IAAON,KAAKS,oBAO7BT,KAAKC,iBAAiB,YAAY,SAAUS,GACxC,MAAMC,EAAiB,CAACd,EAAOC,WAE/BY,EAAMP,UACFC,OAAOQ,OAAON,MAAK,SAAUO,GACzB,OAAOC,QAAQC,IACXF,EAAWG,KAAI,SAAUlB,GACrB,IAA0C,IAAtCa,EAAeM,QAAQnB,GACvB,OAAOM,OAAOc,OAAOpB,UAMhCQ,MAAI,IAAON,KAAKmB,QAAQC,cAOrCpB,KAAKC,iBAAiB,SAAUS,IAC5BA,EAAMW,YACFjB,OAAOkB,MAAMZ,EAAMa,SACdjB,MAAK,SAAUkB,GACZ,OAAOA,GAAQC,MAAMf,EAAMa,SACtBjB,MAAK,SAAUoB,GACZ,OAAOtB,OAAOC,KAAKR,EAAOC,WACrBQ,MAAK,SAAUC,GAEZ,OADAA,EAAMoB,IAAIjB,EAAMa,QAASG,EAASE,SAC3BF,WAGxBG,OAAM,SAAU3B,GACf4B,QAAQC,IAAI","sources":["node_modules/@parcel/service-worker/service-worker.js","node_modules/@parcel/service-worker/runtime-2360b0f5191fef8a.js","src/service_worker.js"],"sourcesContent":["export let manifest = [];\nexport let version = '';\n\n// Called by the runtime.\nexport function _register(m, v) {\n  manifest = m;\n  version = v;\n}\n","import {_register} from '@parcel/service-worker';\nconst manifest = [\"/index.html\",\"/apple-touch-icon.a2f60f36.png\",\"/favicon-32x32.05c450ff.png\",\"/favicon-16x16.13aa46a9.png\",\"/manifest.webmanifest\",\"/android-chrome-192x192.95c00eec.png\",\"/safari-pinned-tab.ed6163ac.svg\",\"/browserconfig.xml\",\"/index.11040a66.css\",\"/shield.204ad2ed.svg\",\"/heart.eb555409.svg\",\"/heart_broken.d60e6221.svg\",\"/index.4f3b95c5.js\"];\nconst version = \"c5c3f10d\";\n_register(manifest, version);\n","/**\n * Service worker for character sheet app\n */\nimport { manifest, version } from '@parcel/service-worker';\n/**\n * Config data\n * Update cacheName when we want to make sure to get new data in the cache\n * Caching all the files we use except the service worker itself\n */\nconst config = {\n    cacheName: version,\n    staticCacheItems: manifest\n};\n\n/**\n * Event: install\n * precaches all the files we use in the app\n */\nself.addEventListener('install', (e) => {\n    function onInstall () {\n        return caches.open(config.cacheName)\n            .then(cache => cache.addAll(config.staticCacheItems));\n    }\n    e.waitUntil(\n        onInstall(e)\n            .then(() => self.skipWaiting())\n    );\n});\n/**\n * Event: activate\n * This clears out any old caches\n */\nself.addEventListener('activate', function (event) {\n    const cacheWhitelist = [config.cacheName];\n\n    event.waitUntil(\n        caches.keys().then(function (cacheNames) {\n            return Promise.all(\n                cacheNames.map(function (cacheName) {\n                    if (cacheWhitelist.indexOf(cacheName) === -1) {\n                        return caches.delete(cacheName);\n                    }\n                    return undefined;\n                })\n            );\n        })\n            .then(() => self.clients.claim())\n    );\n});\n/**\n * Event: fetch\n * Just fetches from the cache if it can, since the whole app is static\n */\nself.addEventListener('fetch', (event) => {\n    event.respondWith(\n        caches.match(event.request)\n            .then(function (resp) {\n                return resp || fetch(event.request)\n                    .then(function (response) {\n                        return caches.open(config.cacheName)\n                            .then(function (cache) {\n                                cache.put(event.request, response.clone());\n                                return response;\n                            });\n                    });\n            }).catch(function (e) {\n                console.log('Service worker fetch failed.');\n            })\n    );\n});\n"],"names":["$b9c9caca8d4422ef$export$e538f94cc8cf4db8","$b9c9caca8d4422ef$export$83d89fbfd8236492","$018db47f79235c0d$var$config","cacheName","staticCacheItems","self","addEventListener","e","waitUntil","caches","open","then","cache","addAll","skipWaiting","event","cacheWhitelist","keys","cacheNames","Promise","all","map","indexOf","delete","clients","claim","respondWith","match","request","resp","fetch","response","put","clone","catch","console","log"],"version":3,"file":"service_worker.js.map"}